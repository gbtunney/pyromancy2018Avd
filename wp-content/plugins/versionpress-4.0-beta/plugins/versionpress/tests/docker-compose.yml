# `npm run tests` FTW! See Dev-Setup.md for more.
version: '2'
services:

  wordpress:
    build: ./dockerfiles/php5.6-apache
    image: versionpress/php5.6-apache:1
    ports:
      - 80:80
    volumes:
      - document-root:/var/www/html
    depends_on:
      - mysql

  mysql:
    image: mysql:5.7
    ports:
      - 3391:3306
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: r00tpwd

  tests:
    build: ./dockerfiles/testenv
    image: versionpress/testenv:1
    volumes:
      # Same volumes as in `wordpress`
      - document-root:/var/www/html

      # Project mounts
      - ..:/opt/project:ro
      - ../../../ext-libs:/opt/ext-libs:ro

      # Caching downloaded WP ZIPs
      - wpcli-cache:/var/www/.wp-cli
    links:
      - selenium-hub:selenium-hub
      - mysql:mysql
      - wordpress:wordpress
    working_dir: /opt/project/tests
    command: ../vendor/bin/phpunit --verbose --colors -c phpunit.xml

    # Allow interactive session by running `docker-compose run tests /bin/bash`
    stdin_open: true
    tty: true

  selenium-hub:
    # Standalone Firefox is enough but could also be a full grid setup, hence the service name
    image: selenium/standalone-firefox

  # Start manually if you want it: `docker-compose run -d --service-ports adminer`
  adminer:
    image: adminer
    ports:
      - "8099:8080"
    links:
      - mysql:db

volumes:
  mysql-data:
  document-root:
  wpcli-cache:
